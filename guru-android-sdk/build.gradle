import ai.getguru.gradle.InstallNativeLibsTask

plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}


android {
    namespace 'ai.getguru.androidsdk'
    compileSdk 28

    defaultConfig {
        minSdk 28
        externalNativeBuild {
            cmake {
                cppFlags "-fexceptions", "-frtti"
                arguments '-DANDROID_STL_FORCE_FEATURES=OFF'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    publishing {
        singleVariant('release') {
            withSourcesJar()
        }
    }
    externalNativeBuild {
        cmake {
            path file('src/main/jni/CMakeLists.txt')
            version '3.22.1'
        }
    }
}

dependencies {
    implementation 'org.pytorch:pytorch_android_lite:1.13.0'
    implementation 'org.pytorch:pytorch_android_torchvision_lite:1.13.0'
    implementation 'com.google.guava:guava:31.1-android'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'org.tensorflow:tensorflow-lite-task-vision:0.4.3'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

task installNativeLibs(type: InstallNativeLibsTask) {
    onnxUrl = "https://repo1.maven.org/maven2/com/microsoft/onnxruntime/onnxruntime-android/1.14.0/onnxruntime-android-1.14.0.aar"
    openCvUrl = "https://github.com/opencv/opencv/releases/download/4.7.0/opencv-4.7.0-android-sdk.zip"
    destDir = "${project.projectDir}/src/main/jni"
}

project.afterEvaluate {
    preBuild.dependsOn installNativeLibs
}